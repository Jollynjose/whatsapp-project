// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @db.Uuid
  phoneNumber String @db.VarChar(100) @unique

  fullName String @db.VarChar(100)

  reminders Reminder[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reminder {
  id String @id @default(uuid()) @db.Uuid
  isActive Boolean @default(true)
  
  user User @relation(fields: [userPhoneNumber], references: [phoneNumber])
  userPhoneNumber String

  body String @db.Text()
  date DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BotAnswer {
  id String @id @default(uuid()) @db.Uuid

  option BotOption @relation(fields: [optionId], references: [id])
  optionId String @unique @db.Uuid

  text String @db.Text()
}

enum OptionCaseEnum {
  FIRST
  SECOND
  THIRD
  FOURTH
  FIFTH
}

model BotOption {
  id String @id @default(uuid()) @db.Uuid

  text String @db.Text()
  case OptionCaseEnum

  botAnswer BotAnswer?

  botMenu BotMenu @relation(fields: [botMenuId], references: [id])
  botMenuId String @db.Uuid
}

enum BotChatGPTPersonality {
  SALESPERSON
  ASSISTANT
}

model BotChatGPT {
  id String @id @default(uuid()) @db.Uuid

  prompt BotChatGPTPrompt[]

  personality BotChatGPTPersonality
}

enum BotMenuType {
  MAIN
  SUB
  REMINDER
}

model BotMenu {
  id String @id @default(uuid()) @db.Uuid

  type BotMenuType

  options BotOption[]
}

model BotChatGPTPrompt {
  id String @id @default(uuid()) @db.Uuid

  text String @db.Text

  botChatGPT BotChatGPT @relation(fields: [botChatGPTId], references: [id])
  botChatGPTId String  @db.Uuid
}